{#- 
  Call to Action Block Template
  ----------------------------
  A flexible call-to-action component that can be configured either through local
  block settings or global  settings. Supports rich text content, action
  buttons, and customizable styling.

  Features:
  - Global or local configuration options
  - Background image with responsive sizing
  - Customizable colors for background, headings, and text
  - Rich text content support
  - Multiple action buttons
  - Responsive image handling with WebP support

  Configuration Options:
  Global Mode (useGlobalCallToActionBlock):
  - Background image from globalContent settings
  - Background color from globalContent settings
  - Heading color from globalContent settings
  - Text color from globalContent settings
  - Rich text from globalContent settings
  - Action buttons from globalContent settings

  Local Mode:
  - Background image from block settings
  - Background color from block settings
  - Heading color from block settings
  - Text color from block settings
  - Rich text from block settings
  - Action buttons from block settings

  Image Responsiveness:
  - Mobile: 768px width
  - Tablet: 1200px × 400px
  - Desktop: 2048px × 800px
-#}

{%- import "_macros/utils.twig" as utils -%}
{%- import "_macros/ui.twig" as ui -%}

{%- set isFooterBlockCallToActionBlock = isFooterBlock ?? false -%}
{%- set useGlobalCallToActionBlock = block.useGlobalCallToActionBlock ?? isFooterBlockCallToActionBlock ?? false -%}
{%- set backgroundImage = null -%}

{# Use the Global Call to Action if it's enabled, otherwise use the local block settings #}
{% if useGlobalCallToActionBlock %}
  {%- set image = globalContent.globalCtaImage ? globalContent.globalCtaImage.one() : null -%}
  {%- set backgroundColour = globalContent.globalCtaBackgroundColour ? globalContent.globalCtaBackgroundColour.color[0].background : null -%}
  {%- set headingColour = globalContent.globalCtaHeadingColour ? globalContent.globalCtaHeadingColour.color[0].heading : null -%}
  {%- set textColour = globalContent.globalCtaTextColour ? globalContent.globalCtaTextColour.color[0].text : null -%}
  {%- set richText = globalContent.globalCtaRichText -%}
  {%- set actionButtons = globalContent.globalCtaActionButtons -%}
  {%- set desktopBackgroundImage = globalContent.globalCtaDesktopBackgroundImage ? globalContent.globalCtaDesktopBackgroundImage.one() : null -%}
  {%- set mobileBackgroundImage = globalContent.globalCtaMobileBackgroundImage ? globalContent.globalCtaMobileBackgroundImage.one() : null -%}
{% else %}
  {%- set image = block.image ? block.image.one() : null -%}
  {%- set backgroundColour = block.backgroundColour ? block.backgroundColour.color[0].background : null -%}
  {%- set headingColour = block.headingColour ? block.headingColour.color[0].heading : null -%}
  {%- set textColour = block.textColour ? block.textColour.color[0].text : null -%}
  {%- set richText = block.richText -%}
  {%- set actionButtons = block.actionButtons -%}
  {%- set desktopBackgroundImage = block.desktopBackgroundImage ? block.desktopBackgroundImage.one() : null -%}
  {%- set mobileBackgroundImage = block.mobileBackgroundImage ? block.mobileBackgroundImage.one() : null -%}
{% endif %}

<section class="call-to-action content-block
  {{ textColour }}
  {{ headingColour }}
  {{ backgroundColour }}
  "
  {{ utils.debugAttributes(entry, 'callToAction', 'Call to Action') }}
  {{ utils.inPageLink(block.id ?? '#') }}
  >
  <div class="content-block-inner container-narrow">

    <div class="container-inner">
      <div class="content-box {{ (image and image.id) ? 'has-image' : 'centered' }}">

        {% if image and image.id %}
        <div class="image-wrapper">
          {{ ui.component('image', {
            img: image,
            class: 'call-to-action-image',
            sizes: '(max-width: 767px) 100vw, (max-width: 1023px) 50vw, 460px',
            formats: ['webp'],
            alt: image.alt ?? image.title,
            lazy: true,
            responsive: {
              sm: {
                mode: 'crop',
                width: 400,
                height: 300,
                quality: 85,
                position: 'center-center',
              },
              md: {
                mode: 'crop',
                width: 600,
                height: 400,
                quality: 85,
                position: 'center-center',
              },
              lg: {
                mode: 'crop',
                width: 460,
                height: 350,
                quality: 85,
                position: 'center-center',
              },
            }
          }) }}
        </div>
        {% endif %}


        <div class="content-box-inner">

          <div class="cta-content">
            {% if richText|length %}
              {{ ui.component('rich-text', { 
                content: richText 
              }) }}
            {% endif %}

            <div class="action-buttons action-buttons-inline">
            {% for action in actionButtons.all() %}
              {% set cta = action.actionButton %}

              {% if 'Custom' in cta.type and cta.url == '' %}
                {% set buttonIconUrl = '@webroot/assets/icons/system/icon_telephone.svg' %}
                {% set buttonIconInline = svg(buttonIconUrl) %}
                {% set ctaText = companyInfo.telephone %}
                {% set ctaUrl = 'tel:' ~ companyInfo.telephone|replace({' ': ''}) %}
                {% set ctaClass = 'btn-has-icon btn-call-now' %}
                {% set buttonIcon = buttonIconInline %}
              {% elseif 'Custom' in cta.type and 'tel' in cta.url %}
                {% set buttonIconUrl = '@webroot/assets/icons/system/icon_telephone.svg' %}
                {% set buttonIconInline = svg(buttonIconUrl) %}
                {% set ctaText = cta.text ?? 'Call us' %}
                {% set ctaUrl = cta.url %}
                {% set ctaClass = 'btn-has-icon btn-call-now' %}
                {% set buttonIcon = buttonIconInline %}
              {% else %}
                {% set ctaText = cta.text ?? 'Read more' %}
                {% set ctaUrl = cta.url %}
                {% set ctaClass = 'btn-primary' %}
                {% set buttonIcon = null %}
              {% endif %}

              {{ ui.component('button', {
                type: 'link',
                cta: cta,
                href: ctaUrl,
                target: cta.target,
                text: ctaText,
                class: 'btn ' ~ ctaClass,
                buttonIcon: buttonIcon,
                buttonIconClass: 'btn-icon !w-[0.75em] !h-[0.75em]',
              }) }}
            {% endfor %}
            </div>
            
          </div>
        </div>
      </div>
    </div>
    
    {% if desktopBackgroundImage or mobileBackgroundImage %}
      {{ ui.component('picture', {
        desktopImg: desktopBackgroundImage,
        mobileImg: mobileBackgroundImage,
        breakpoint: '768px',
        class: 'background-image call-to-action-image',
        formats: ['webp'],
        alt: (desktopBackgroundImage ?? mobileBackgroundImage).alt ?? (desktopBackgroundImage ?? mobileBackgroundImage).title,
        lazy: true,
        desktopResponsive: {
          md: {
            mode: 'crop',
            width: 1920,
            height: 440,
            quality: 90,
            position: 'center-center',
          },
          lg: {
            mode: 'crop',
            width: 3840,
            height: 880,
            quality: 90,
            position: 'center-center',
          },
        },
        mobileResponsive: {
          sm: {
            mode: 'crop',
            width: 1500,
            height: 792,
            quality: 90,
            position: 'center-center',
          },
        }
      }) }}
    {% endif %}
  </div>
</section>
